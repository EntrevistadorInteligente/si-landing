---
import { type GithubContributor, getPaths } from '@common';
import { Button, Icon } from '@components';
import { Octokit } from '@octokit/rest';
import { getLangFromUrl, useTranslations } from '@i18n/utils';
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const { GITHUB_URL, GITHUB_TOKEN, DISCORD_URL } = getPaths(lang);

const octokit = new Octokit({ auth: GITHUB_TOKEN });

async function getAllContributors() {
  try {
    const { data: repos } = await octokit.repos.listForOrg({
      org: 'EntrevistadorInteligente',
      type: 'public',
    });

    const excludedRepos = ['admin', 'handbook', 'si-architecture-diagrams'];
    let allContributors: any[] = [];

    for (const repo of repos) {
      if (excludedRepos.includes(repo.name)) continue;

      const { data: contributors } = await octokit.repos.listContributors({
        owner: 'EntrevistadorInteligente',
        repo: repo.name,
      });

      allContributors = [...allContributors, ...contributors];
    }

    const uniqueContributors = Array.from(new Map(allContributors.map((item) => [item.id, item])).values());

    uniqueContributors.forEach((contributor) => {
      if (contributor.avatar_url) {
        contributor.avatar_url = `${contributor.avatar_url}&s=120`;
      }
    });
    return uniqueContributors;
  } catch (error) {
    console.error('Error fetching contributors:', error);
    return [];
  }
}

const dataDevs: Array<GithubContributor> = await getAllContributors();
---

<section id="community" class="mb-20 mt-32" aria-labelledby="contribuidores-titutlo">
  <div class="container mx-auto px-4">
    <div class="grid place-items-center gap-6">
      <!-- Title Section -->
      <h2 id="contribuidores-titutlo" class="section-title text-center">{t('contributor.title')}</h2>

      <!-- Contributor Section -->
      <ul class="wrap flex w-full max-w-5xl flex-wrap justify-center">
        <li class="relative ml-[-10px] hover:z-50">
          <a href="https://github.com/AnaRangel" target="_blank" title="AnaRangel" aria-label="Perfil de GitHub de AnaRangel">
            <img
              src="https://avatars.githubusercontent.com/u/30361612?v=4"
              class="h-16 w-16 cursor-pointer rounded-full border border-gray-900 object-cover transition-transform duration-700 ease-elastic hover:scale-125"
              alt={`Avatar de AnaRangel`}
            />
          </a>
        </li>
        {
          dataDevs.map((contributor) => (
            <li class="relative ml-[-10px] hover:z-50">
              <a
                href={contributor.html_url}
                target="_blank"
                title={contributor.login}
                aria-label={`Perfil de GitHub de ${contributor.login}`}
              >
                <img
                  src={contributor.avatar_url}
                  class="h-16 w-16 cursor-pointer rounded-full border border-gray-900 object-cover transition-transform duration-700 ease-elastic hover:scale-125"
                  alt={`Avatar de ${contributor.login}`}
                />
              </a>
            </li>
          ))
        }
      </ul>

      <!-- Button section -->
      <div class="mt-3.5 flex items-center gap-2 max-sm:flex-wrap max-sm:justify-center">
        <Button href={DISCORD_URL} isInvert class="flex gap-4">
          <Icon icon="discord" class="h-6 w-6" />
          <span> Discord </span>
        </Button>

        <Button href={GITHUB_URL} class="flex gap-2">
          <Icon iconStyle="solid" icon="gitHub" class="h-5 w-5" />
          <span> Github</span>
        </Button>
      </div>
    </div>
  </div>
</section>

<style>
  a::after {
    content: attr(title);
    position: absolute;
    inset-block-end: 113%;
    inset-inline-start: 50%;
    transform: translateX(-50%);
    white-space: nowrap;
    background-color: hsla(245, 59%, 59%, 0.8);
    color: hsl(0, 0%, 100%);
    padding: 0.3125rem;
    border-radius: 0.3125rem;
    font-size: 0.75rem;
    opacity: 0;
    visibility: hidden;
    transition: opacity 300ms;
    pointer-events: none;
    font-weight: 700;
  }

  a:hover::after {
    opacity: 1;
    visibility: visible;
  }

  a:focus::after {
    opacity: 1;
    visibility: visible;
  }
</style>
